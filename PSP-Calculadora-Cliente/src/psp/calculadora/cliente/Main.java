package psp.calculadora.cliente;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Alberto
 */
public class Main extends javax.swing.JFrame {

    // Para el botón On/Off
    Boolean encendido = false;

    // Variables para recoger los números, la memoria guarda el resultado y al operaciónel signo
    String num1 = "", num2 = "", memoria = "", signo = "";

    // Variable para recoger y trabajar con el TexView
    String memoriaCajaTxt = "";

    // Para restablecer la botonera
    Boolean condicionInfinito = true;

    // Variable para que no permita introducir dos simbolos seguidos
    Boolean noDosSignos = true; // true vacio

    // Variable utilizada para cambiar la forma de enviar los números
    Boolean primerCalculo = true;

    // Array de bytes para el recoger la información del servidor
    byte[] resultado = new byte[500];

    //Boolean contador = true;
    Socket clienteSocket;
    InputStream is;
    OutputStream os;

    public Main() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtCaja = new javax.swing.JTextField();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnPor = new javax.swing.JButton();
        btnRaiz = new javax.swing.JButton();
        btnPi = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btnDiv = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btnMenos = new javax.swing.JButton();
        btnIgual = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnMas = new javax.swing.JButton();
        btnPunto = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        PanePuerto = new javax.swing.JPanel();
        txtDirec = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnAcepPuerto = new javax.swing.JButton();
        btnDefecto = new javax.swing.JButton();
        lDirec = new javax.swing.JLabel();
        lPuerto = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPuerto = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtCaja.setEditable(false);

        btn7.setText("7");
        btn7.setEnabled(false);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setText("8");
        btn8.setEnabled(false);
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("9");
        btn9.setEnabled(false);
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btnPor.setText("*");
        btnPor.setEnabled(false);
        btnPor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPorActionPerformed(evt);
            }
        });

        btnRaiz.setText("√");
        btnRaiz.setToolTipText("");
        btnRaiz.setEnabled(false);
        btnRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaizActionPerformed(evt);
            }
        });

        btnPi.setText("π");
        btnPi.setToolTipText("");
        btnPi.setEnabled(false);
        btnPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPiActionPerformed(evt);
            }
        });

        btnBorrar.setText("CE");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btn4.setText("4");
        btn4.setEnabled(false);
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("5");
        btn5.setEnabled(false);
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setText("6");
        btn6.setEnabled(false);
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btnDiv.setText("/");
        btnDiv.setEnabled(false);
        btnDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivActionPerformed(evt);
            }
        });

        btn1.setText("1");
        btn1.setEnabled(false);
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.setEnabled(false);
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.setEnabled(false);
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btnMenos.setText("-");
        btnMenos.setEnabled(false);
        btnMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosActionPerformed(evt);
            }
        });

        btnIgual.setText("=");
        btnIgual.setEnabled(false);
        btnIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIgualActionPerformed(evt);
            }
        });

        btn0.setText("0");
        btn0.setEnabled(false);
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnMas.setText("+");
        btnMas.setEnabled(false);
        btnMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasActionPerformed(evt);
            }
        });

        btnPunto.setText(".");
        btnPunto.setEnabled(false);
        btnPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPuntoActionPerformed(evt);
            }
        });

        btnEliminar.setText("C");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        PanePuerto.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setText("Dirección:");

        btnAcepPuerto.setText("Aceptar");
        btnAcepPuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcepPuertoActionPerformed(evt);
            }
        });

        btnDefecto.setText("Puerto por Defecto");
        btnDefecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefectoActionPerformed(evt);
            }
        });

        lDirec.setText("Dirección:");
        lDirec.setToolTipText("");

        lPuerto.setText("Puerto:");

        jLabel4.setText("Puerto:");

        javax.swing.GroupLayout PanePuertoLayout = new javax.swing.GroupLayout(PanePuerto);
        PanePuerto.setLayout(PanePuertoLayout);
        PanePuertoLayout.setHorizontalGroup(
            PanePuertoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanePuertoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanePuertoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDirec)
                    .addComponent(btnAcepPuerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDefecto, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(lDirec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lPuerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPuerto)
                    .addGroup(PanePuertoLayout.createSequentialGroup()
                        .addGroup(PanePuertoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanePuertoLayout.setVerticalGroup(
            PanePuertoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanePuertoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDirec, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAcepPuerto)
                .addGap(18, 18, 18)
                .addComponent(btnDefecto)
                .addGap(18, 18, 18)
                .addComponent(lDirec)
                .addGap(18, 18, 18)
                .addComponent(lPuerto)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtCaja)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPunto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnMas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(204, 204, 204))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRaiz, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanePuerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PanePuerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRaiz, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPunto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón igual que llama a la función enviar
     *
     * @param evt
     */
    private void btnIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIgualActionPerformed
        enviar();
    }//GEN-LAST:event_btnIgualActionPerformed

    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */

    private void btnPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPuntoActionPerformed
        introducirTxtcaja(btnPunto.getText());
        recogerNumero(btnPunto.getText());
    }//GEN-LAST:event_btnPuntoActionPerformed

    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        introducirTxtcaja(btn0.getText());
        recogerNumero(btn0.getText());
    }//GEN-LAST:event_btn0ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        introducirTxtcaja(btn1.getText());
        recogerNumero(btn1.getText());
    }//GEN-LAST:event_btn1ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        introducirTxtcaja(btn2.getText());
        recogerNumero(btn2.getText());
    }//GEN-LAST:event_btn2ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        introducirTxtcaja(btn3.getText());
        recogerNumero(btn3.getText());
    }//GEN-LAST:event_btn3ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        introducirTxtcaja(btn4.getText());
        recogerNumero(btn4.getText());
    }//GEN-LAST:event_btn4ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        introducirTxtcaja(btn5.getText());
        recogerNumero(btn5.getText());
    }//GEN-LAST:event_btn5ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        introducirTxtcaja(btn6.getText());
        recogerNumero(btn6.getText());
    }//GEN-LAST:event_btn6ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        introducirTxtcaja(btn7.getText());
        recogerNumero(btn7.getText());
    }//GEN-LAST:event_btn7ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        introducirTxtcaja(btn8.getText());
        recogerNumero(btn8.getText());
    }//GEN-LAST:event_btn8ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        introducirTxtcaja(btn9.getText());
        recogerNumero(btn9.getText());
    }//GEN-LAST:event_btn9ActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones recogerOper
     * e introducirTxtcaja
     *
     * @param evt
     */
    private void btnMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasActionPerformed
        introducirTxtcaja(btnMas.getText());
        recogerOper(btnMas.getText());
    }//GEN-LAST:event_btnMasActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones recogerOper
     * e introducirTxtcaja
     *
     * @param evt
     */
    private void btnMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenosActionPerformed
        introducirTxtcaja(btnMenos.getText());
        recogerOper(btnMenos.getText());
    }//GEN-LAST:event_btnMenosActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones recogerOper
     * e introducirTxtcaja
     *
     * @param evt
     */
    private void btnDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivActionPerformed
        introducirTxtcaja(btnDiv.getText());
        recogerOper(btnDiv.getText());
    }//GEN-LAST:event_btnDivActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones recogerOper
     * e introducirTxtcaja
     *
     * @param evt
     */
    private void btnPorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPorActionPerformed
        introducirTxtcaja(btnPor.getText());
        recogerOper(btnPor.getText());
    }//GEN-LAST:event_btnPorActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones
     * recogerNumero e introducirTxtcaja
     *
     * @param evt
     */
    private void btnPiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPiActionPerformed
        introducirTxtcaja(btnPi.getText());
        recogerNumero(btnPi.getText());
    }//GEN-LAST:event_btnPiActionPerformed
    /**
     * Botón que recoge el texto de este y lo envia a las funciones recogerOper
     * e introducirTxtcaja, vacia el TextView, para reordenar el formato de este
     * y que salga primero el simbolo de raíz y luego el número
     *
     * @param evt
     */
    private void btnRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaizActionPerformed
        txtCaja.setText("");
        memoriaCajaTxt = "";
        if (memoria.equalsIgnoreCase("")) {

            introducirTxtcaja(btnRaiz.getText() + num1);
        } else {

            introducirTxtcaja(btnRaiz.getText() + memoria);
        }
        recogerOper(btnRaiz.getText());
    }//GEN-LAST:event_btnRaizActionPerformed

    /**
     * LLama a la función limpiar
     *
     * @param evt
     */

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Función que elimina caracteres en caso de que se haya introducido mal
     *
     * @param evt
     */

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

        if (memoriaCajaTxt.substring(memoriaCajaTxt.length() - 1).equalsIgnoreCase(num1)) {
            num1 = "";
        } else if (memoriaCajaTxt.substring(memoriaCajaTxt.length() - 1).equalsIgnoreCase(num2)) {
            num2 = "";
        } else {
            signo = "";
            // Una vez introducido un número desbloquea el 
            //booleano de la función recogerOper para que pueda volver a almacener un simbolo
            noDosSignos = true;
        }

        memoriaCajaTxt = memoriaCajaTxt.substring(0, memoriaCajaTxt.length() - 1);
        System.out.println(memoriaCajaTxt);
        txtCaja.setText(memoriaCajaTxt);
    }//GEN-LAST:event_btnBorrarActionPerformed

    /**
     * Botón que llama al boton de encender y le envía la dirección y el puerto
     * de la respectiva caja de texto, aparte de insertar esta información en
     * sus labels
     *
     * @param evt
     */
    private void btnAcepPuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcepPuertoActionPerformed
        Encender(txtDirec.getText(), Integer.parseInt(txtPuerto.getText()));
        lDirec.setText("Dirección: " + txtDirec.getText());
        lPuerto.setText("Puerto: " + txtPuerto.getText());
    }//GEN-LAST:event_btnAcepPuertoActionPerformed
    /**
     * Botón que llama al boton de encender y le envía la dirección y el puerto
     * escrito por defecto, aparte de insertar esta información en sus labels
     *
     * @param evt
     */
    private void btnDefectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefectoActionPerformed
        Encender("localhost", 5555);
        lDirec.setText("Dirección: " + "localhost");
        lPuerto.setText("Puerto: " + String.valueOf(5555));
    }//GEN-LAST:event_btnDefectoActionPerformed

    /**
     * Función On/Off, que conecta y desconecta(además de cerrar la calculadora)
     * el cliente con el servidor y habilita los botones
     */
    public void Encender(String direccion, int Puerto) {
        if (encendido == false) {

            try {
                encendido = true;
                // System.out.println("Creando socket cliente");
                clienteSocket = new Socket();
                // System.out.println("Estableciendo la conexi�n");

                InetSocketAddress addr = new InetSocketAddress(direccion, Puerto);

                clienteSocket.connect(addr);

                is = clienteSocket.getInputStream();
                os = clienteSocket.getOutputStream();

                btn0.setEnabled(true);
                btn1.setEnabled(true);
                btn2.setEnabled(true);
                btn3.setEnabled(true);
                btn4.setEnabled(true);
                btn5.setEnabled(true);
                btn6.setEnabled(true);
                btn7.setEnabled(true);
                btn8.setEnabled(true);
                btn9.setEnabled(true);
                btnDiv.setEnabled(true);
                btnIgual.setEnabled(true);
                btnMas.setEnabled(true);
                btnMenos.setEnabled(true);
                btnPi.setEnabled(true);
                btnPor.setEnabled(true);
                btnRaiz.setEnabled(true);
                btnPunto.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnBorrar.setEnabled(true);

            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                System.out.println("Cerrando el socket cliente");

                clienteSocket.close();

                System.exit(0);
                System.out.println("Terminado");
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * Función que guardo los valores en variables que se van pulsando de la
     * interfaz
     *
     * @param numero
     */
    private void recogerNumero(String numero) {

        // Si el simbolo introducido es Pi, cambia el valor del String numero por el valor de Pi
        if (numero.equalsIgnoreCase("π")) {
            numero = String.valueOf(Math.PI);
        }

        if ("".equalsIgnoreCase(signo) || "√".equalsIgnoreCase(signo)) {
            num1 += numero;
        } else {

            num2 += numero;
        }

        // Una vez introducido un número desbloquea el 
        //booleano de la función recogerOper para que pueda volver a almacener un simbolo
        noDosSignos = true;
    }

    /**
     * Función que guarda el signo pulsado y con la condición no permite que se
     * introduzcan más de 2 signos seguidos
     *
     * @param oper
     */
    private void recogerOper(String oper) {

        if (noDosSignos == true && !num1.equalsIgnoreCase("") && num2.equalsIgnoreCase("")) {
            signo = oper;
            noDosSignos = false;
        } else if (!num1.equalsIgnoreCase("") && !num2.equalsIgnoreCase("")) {

            enviar();
            signo = oper;
            noDosSignos = false;
        } else {
            System.out.println("Has introducido 2 simbolos seguidos");
            memoriaCajaTxt = memoriaCajaTxt.substring(0, memoriaCajaTxt.length() - 1);
            txtCaja.setText(memoriaCajaTxt);

        }

    }

    /**
     * Función que concatena la información pulsada y la muestra por pantalla a
     * traves del TextView
     *
     * @param numero
     */
    private void introducirTxtcaja(String numero) {
        memoriaCajaTxt += numero;
        txtCaja.setText(memoriaCajaTxt);
    }

    /**
     * Envía el calculo a la función functionOsIs de 2 formas distintas, se
     * envían los calculos de 1 en 1. Si es el primer calculo coge los números
     * guardados más el signo y lo envía, cuando son las siguientes operaciones
     * el primer número siempre es resultado de la primera operación más el
     * segundo número introducido y el signo.
     */
    private void enviar() {

        if (memoria.equalsIgnoreCase("∞")) {
            txtCaja.setText("No se puede operar con el valor ∞");
            funcionInfinito();

        } else {
            if (primerCalculo == true) {
                primerCalculo = false;

                String calculo = num1 + "n" + signo + "n" + num2;

                System.out.println(calculo + " enviado 1º vez");

                functionOsIs(calculo);

            } else {

                String calculo = memoria + "n" + signo + "n" + num2;

                System.out.println(calculo + " enviado 2º vez");

                functionOsIs(calculo);

            }
        }

    }

    private void funcionInfinito() {

        if (condicionInfinito == true && memoria.equalsIgnoreCase("∞")) {
            btn0.setEnabled(false);
            btn1.setEnabled(false);
            btn2.setEnabled(false);
            btn3.setEnabled(false);
            btn4.setEnabled(false);
            btn5.setEnabled(false);
            btn6.setEnabled(false);
            btn7.setEnabled(false);
            btn8.setEnabled(false);
            btn9.setEnabled(false);
            btnDiv.setEnabled(false);
            btnIgual.setEnabled(false);
            btnMas.setEnabled(false);
            btnMenos.setEnabled(false);
            btnPi.setEnabled(false);
            btnPor.setEnabled(false);
            btnRaiz.setEnabled(false);
            btnPunto.setEnabled(false);
            btnEliminar.setEnabled(true);
            btnBorrar.setEnabled(false);
            condicionInfinito = false;
        } else {
            btn0.setEnabled(true);
            btn1.setEnabled(true);
            btn2.setEnabled(true);
            btn3.setEnabled(true);
            btn4.setEnabled(true);
            btn5.setEnabled(true);
            btn6.setEnabled(true);
            btn7.setEnabled(true);
            btn8.setEnabled(true);
            btn9.setEnabled(true);
            btnDiv.setEnabled(true);
            btnIgual.setEnabled(true);
            btnMas.setEnabled(true);
            btnMenos.setEnabled(true);
            btnPi.setEnabled(true);
            btnPor.setEnabled(true);
            btnRaiz.setEnabled(true);
            btnPunto.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnBorrar.setEnabled(true);
            condicionInfinito = true;
        }

    }

    /**
     * Función que envia el calculo al servidor y recoge el resultado de este.
     *
     * @param calculo
     */
    private void functionOsIs(String calculo) {

        try {
            os.write(calculo.getBytes());
            is.read(resultado);

            // Estás funciones sirven para que no de error al enviar una segunda operación
            //cuando el servidor devuelve un calculo con decimales
            DecimalFormatSymbols simbolos = new DecimalFormatSymbols();
            simbolos.setDecimalSeparator('.');
            DecimalFormat df = new DecimalFormat("#.##", simbolos);
            memoria = df.format(Float.parseFloat(new String(resultado)));

            memoriaCajaTxt = memoria;

            // Llama a la función y se le pasa un valor vacío pues el valor lo va a  recoger de la memoria
            introducirTxtcaja("");

            // Vaciamos el num2
            num2 = "";
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }

    }

    /**
     * Función que restablece a cero todo para volver a empezar
     */
    private void limpiar() {
        num1 = "";
        num2 = "";
        memoria = "";
        signo = "";
        memoriaCajaTxt = "";
//        contador = true;
        txtCaja.setText(memoriaCajaTxt);
        noDosSignos = true; // true vacio
        primerCalculo = true;
        resultado = new byte[500];

        funcionInfinito();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanePuerto;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAcepPuerto;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnDefecto;
    private javax.swing.JButton btnDiv;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIgual;
    private javax.swing.JButton btnMas;
    private javax.swing.JButton btnMenos;
    private javax.swing.JButton btnPi;
    private javax.swing.JButton btnPor;
    private javax.swing.JButton btnPunto;
    private javax.swing.JButton btnRaiz;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lDirec;
    private javax.swing.JLabel lPuerto;
    private javax.swing.JTextField txtCaja;
    private javax.swing.JTextField txtDirec;
    private javax.swing.JTextField txtPuerto;
    // End of variables declaration//GEN-END:variables
}
